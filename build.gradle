plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "com.moowork.node" version "1.3.1"
}

group = 'dez'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

task buildFront(type: YarnTask) {
	args = ['build']
}

yarn_install.dependsOn(yarn_cache_clean)
buildFront.dependsOn(yarn_install)
processResources.dependsOn(buildFront)

repositories {
	mavenCentral()
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql'
	implementation 'org.projectlombok:lombok'
	implementation 'javax.xml.bind:jaxb-api'
	implementation 'io.sentry:sentry-spring:1.7.30'
	compile 'org.jsoup:jsoup:1.13.1'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.0.0.RELEASE')
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	annotationProcessor 'org.projectlombok:lombok:1.18.12'
}


test {
	useJUnitPlatform()
}